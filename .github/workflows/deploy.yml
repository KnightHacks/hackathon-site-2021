name: Kubernetes Deployment

on:
  push:
    tags:
      - v*.*

env:
  REGISTRY_NAME: {registry-name}
  CLUSTER_NAME: {cluster-name}
  CLUSTER_RESOURCE_GROUP: {resource-group-name}
  NAMESPACE: {namespace-name}
  SECRET: {secret-name}
  APP_NAME: {app-name}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main

    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build ./frontend -t ${{ env.REGISTRY_NAME }}.azurecr.io/frontend:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/frontend:${{ github.sha }}
        docker build ./backend -t ${{ env.REGISTRY_NAME }}.azurecr.io/backend:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/backend:${{ github.sha }}
    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # Create image pull secret for ACR
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}
        force: true

    # Create secret for backend environment variables
    - uses: azure/k8s-create-secret@v1
      with:
        namespace: ${{ env.NAMESPACE }}
        secret-type: 'generic'
        secret-name: backend-secrets
        arguments: 
          --from-literal=MAIL_SERVER=${{ secrets.MAIL_SERVER }} --from-literal=MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} --from-literal=MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} --from-literal=MAIL_DEFAULT_SENDER=${{ secrets.MAIL_DEFAULT_SENDER }} --from-literal=SECRET_KEY=${{ secrets.SECRET_KEY }}
    
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/backend.yml
          manifests/frontend.yml
          manifests/mongo.yml
          manifests/ingress.yml
          manifests/rabbitmq.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/frontend:${{ github.sha }}
          ${{ env.REGISTRY_NAME }}.azurecr.io/backend:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}